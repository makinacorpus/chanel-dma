<plominodatabase id="planningdb">
  <design>
    <element id="frmShopProgram" title="Shop program" type="PlominoForm">
      <id type="Products.Archetypes.Field.StringField">frmShopProgram</id>
      <onCreateDocument type="Products.Archetypes.Field.TextField"><![CDATA[]]></onCreateDocument>
      <onOpenDocument type="Products.Archetypes.Field.TextField"><![CDATA[db = context.getParentDatabase()
current_user_id = context.getCurrentUserId()
current_user_roles = context.getCurrentUserRoles()
authors = asList(context.getItem("Plomino_Authors"))

if (not context.isEditMode()) and ("[manager]" in current_user_roles or current_user_id in authors or "Manager" in context.getCurrentUser().getRoles()):
    context.REQUEST.RESPONSE.redirect("%s%s" % (plominoDocument.absolute_url(), "/EditDocument"))]]></onOpenDocument>
      <beforeSaveDocument type="Products.Archetypes.Field.TextField"><![CDATA[]]></beforeSaveDocument>
      <onSaveDocument type="Products.Archetypes.Field.TextField"><![CDATA[db = context.getParentDatabase()

is_locked = context.getItem("planning_locked") == "true" 
authorized = ["[manager]"]

if not is_locked:
   shop = db.getDocument(context.getItem("shop_id"))
   user_ids = asList(shop.getItem("shop_manager"))
   authorized = authorized + user_ids
else:
    html = """<br/> Planning : <a href="%s"/>planning changed<a><br/>Submitted by : %s""" % (context.absolute_url(), userFullname(db, db.getCurrentUserId())) 
    sender = db.portal_url.getPortalObject().email_from_address
    sendMail(
        db,
        ["progsubmit@mirabellstudio.com"],
        "A submit from Chanel POS Planning",
        html,
        immediate=True,
        sender=sender
    )

context.setItem("Plomino_Authors", authorized)]]></onSaveDocument>
      <onDeleteDocument type="Products.Archetypes.Field.TextField"><![CDATA[]]></onDeleteDocument>
      <onSearch type="Products.Archetypes.Field.TextField"><![CDATA[]]></onSearch>
      <beforeCreateDocument type="Products.Archetypes.Field.TextField"><![CDATA[]]></beforeCreateDocument>
      <FormLayout type="Products.Archetypes.Field.TextField"><![CDATA[
<p><span class="plominoFieldClass">display_planning</span></p>
<p><span class="plominoFieldClass">planning_data</span></p>
<p><span class="plominoFieldClass">buttons</span></p>
<div>
<span class="plominoFieldClass">planning_locked</span><div><p><span class="plominoFieldClass">popup_html</span></p></div>
</div>
]]></FormLayout>
      <FormMethod type="Products.Archetypes.Field.TextField"><![CDATA[Auto]]></FormMethod>
      <DocumentTitle type="Products.Archetypes.Field.TextField"><![CDATA[db = context.getParentDatabase()
request = context.REQUEST
if context and context.isDocument():
    program = db.getDocument(context.getItem("program_id"))
    shop = db.getDocument(context.getItem("shop_id"))
    if(program and shop):
        month = db.callScriptMethod("scriptConfig", "getSingleConfigValue", db, "months", program.getItem("program_month"))
        
        market = db.callScriptMethod("scriptConfig", "getSingleConfigValue", db, "markets", program.getItem("program_market"))
        
        return "%s - %s %s" % (shop.getItem("shop_name"),month, program.getItem("program_year"))]]></DocumentTitle>
      <DynamicDocumentTitle type="Products.Archetypes.Field.BooleanField">True</DynamicDocumentTitle>
      <StoreDynamicDocumentTitle type="Products.Archetypes.Field.BooleanField">True</StoreDynamicDocumentTitle>
      <DocumentId type="Products.Archetypes.Field.TextField"><![CDATA[db = context.getParentDatabase()
request = context.REQUEST
program = db.getDocument(request.get("program_id"))
shop = db.getDocument(request.get("shop_id"))
           
month = db.callScriptMethod("scriptConfig", "getSingleConfigValue", db, "months", program.getItem("program_month"))

market = db.callScriptMethod("scriptConfig", "getSingleConfigValue", db, "markets", program.getItem("program_market"))

return "%s - %s - %s - %s - %s" % (context.getItem("doctype").upper(), shop.getItem("shop_name"), market, month, program.getItem("program_year"))]]></DocumentId>
      <ActionBarPosition type="Products.Archetypes.Field.StringField">BOTTOM</ActionBarPosition>
      <HideDefaultActions type="Products.Archetypes.Field.BooleanField">True</HideDefaultActions>
      <HideInMenu type="Products.Archetypes.Field.BooleanField">False</HideInMenu>
      <isSearchForm type="Products.Archetypes.Field.BooleanField">False</isSearchForm>
      <isPage type="Products.Archetypes.Field.BooleanField">False</isPage>
      <SearchView type="Products.Archetypes.Field.StringField"/>
      <SearchFormula type="Products.Archetypes.Field.TextField"><![CDATA[]]></SearchFormula>
      <Position type="Products.Archetypes.Field.IntegerField"/>
      <ResourcesJS type="Products.Archetypes.Field.TextField"><![CDATA[]]></ResourcesJS>
      <ResourcesCSS type="Products.Archetypes.Field.TextField"><![CDATA[]]></ResourcesCSS>
      <excludeFromNav type="Products.Archetypes.Field.BooleanField">False</excludeFromNav>
      <elements>
        <element id="display_planning" title="display_planning" type="PlominoField">
          <id type="Products.Archetypes.Field.StringField">display_planning</id>
          <FieldType type="Products.Archetypes.Field.StringField">RICHTEXT</FieldType>
          <FieldMode type="Products.Archetypes.Field.StringField">DISPLAY</FieldMode>
          <Formula type="Products.Archetypes.Field.TextField"><![CDATA[db = context.getParentDatabase()

library = context.getParentNode().posformats
cropText = db.restrictedTraverse("plone").cropText

def getPreviewUrl(path):
    preview = library.getFolderContents(contentFilter= {
                     'path': {
                             'query': path,
                             'depth': -1,
                             'Title': '16/9'
                      },
                      'Type': 'Video file',})
    return preview and preview[0].getObject().absolute_url() + "/at_download/file" or ""

shop = db.getDocument(context.getItem('shop_id'))
program = db.getDocument(context.getItem('program_id'))

comments = context.getItem('shopprogram_comments', '')
if "[manager]" in context.getCurrentUserRoles():
    comments = """<textarea class="planning-comment">%s</textarea><button id="save-comment" class="btn">Save</button><script>$(document).ready(function() {
    $(".planning-comment").keydown(function() {
        $("#save-comment").text("Save");
        $("#save-comment").removeAttr("disabled");
    });
    $("#save-comment").click(function(e) {
        var comment = $(".planning-comment").val()
        $.post("saveComment/runAgent", {docid: "%s",comment: comment}, function() {
            $("#save-comment").text("Saved");
            $("#save-comment").attr("disabled", "1");
        });
        return false;
});

});</script>
""" % (comments, context.id)
else:
    if comments:
        comments = """<div class="planning-comment">%s</div>""" % comments
all_movies_id = asList(program.getItem("program_movies"))

# Set default values
year = program.getItem("program_year")
month = program.getItem("program_month")

start_date_str = "%d-%02d-01" % (year, month)
next_month = StringToDate(start_date_str, "%Y-%m-%d") + 40
next_month_date_str = "%d-%02d-01" % (next_month.year(), next_month.month())
end_date_str = DateToString(StringToDate(next_month_date_str, "%Y-%m-%d") - 1, "%Y-%m-%d")

# tooltip
def html_information(information, id):
    if information:
        return """<i rel="#info-%s" class="video-info"></i><div class="tooltip" id="info-%s">%s<div class="arrow"></div></div>""" % (id, id, information)
    return ""

# All movies
all_movies = []
for m in asList(program.getItem("program_movies")):
    movie = [db.getDocument(m[0]),m[1],m[0]]
    if (len(m) > 2 and m[2] != ""):
        movie.append(m[2])
    else:
        movie.append(start_date_str)
    all_movies.append(movie)

all_movies_not_found = [movie[2] for movie in all_movies if not movie[0]]
all_movies = [movie for movie in all_movies if movie[0]]

if all_movies_not_found:
    Log("Program %s doesn't find movies %s" % (program.id, all_movies_not_found))

all_movies.sort(key = lambda m: m[0].getItem("movie_title"))

displays = [a for a in [db.getDocument(id) for id in asList(shop.getItem("shop_displays"))] if a]

lock = context.getItem("planning_locked")
lock_html = (lock and lock == "true") and "<i class='lock-prog'></i>" or ""

planning_data = context.getItem("planning_data")
planning_data = (planning_data) and json_loads(planning_data) or {}

movie_css_dict = {"Y": "yes", "N": "no", "X": ""}

movies_by_format = {}

# refactor movies to arrange them by format
for movie in all_movies:
    movie_doc = movie[0]
    if not (movie_doc and movie_doc.getItem("movie_is_published")):
        continue
    formats = movie_doc.getItem('movie_formats')
    axes = asList(movie_doc.getItem('movie_axes'))
    title = movie_doc.getItem('movie_title')
    subtitle = movie_doc.getItem("movie_subtitle")
    movie_path = asList(movie_doc.getItem('movie_link'))
    movie_preview = getPreviewUrl(movie_path)
    movie_start_date = movie[3]
    for f in formats:
        movies = movies_by_format.setdefault(f, [])
        movies.append({
            'id': movie_doc.id,
            'title': title,
            'information': movie[1],
            'axes': axes,
            'preview': movie_preview,
            'subtitle': subtitle and " - " + subtitle or "",
            'start_date_min': movie_start_date,
        })
        movies_by_format[f] = movies

# Planning header
html = u"""
<h2 class="planning-shop">%(shop_name)s%(lock_html)s</h2><h3 class="planning-program">%(program_name)s Programmation %(lock_html)s</h3>
%(comments)s
<div class="planning-table cells-%(nb_cells)s">
  <div class="display-row">
""" % {
         'shop_name': shop.getItem('shop_name'),
         'lock_html': lock_html,
         'comments': comments,
         'nb_cells': len(displays),
         'program_name' : program.getItem('program_name')
       }

# Table header
for display in displays:
    html += """<div class="display-cell"><p class="display-cell-container">"""
    html += """<span class="display-cell-text">%s""" % (display.getItem('display_name'))
    if display.getItem('display_cnario'):
        html += "<br>(CNario)"
    if display.getItem('display_online'):
        html += "<br>(Online)"
    html += "</span></p></div>"

html += """
  </div>
  <div class="movies-row">"""

is_locked = str(plominoContext.getItem("planning_locked")) == "true"
if is_locked or not plominoDocument.isEditMode():
   input_disabled = "disabled"
else:
   input_disabled = ""

# generate all movie cells
for display in displays:
    display_data = planning_data.get(display.id, {})

    display_axes = asList(display.getItem("display_axes"))

    html += """
    <div class="movies-column" rel="%s">""" % display.id
    for movie in movies_by_format.get(display.getItem('display_formats'), []):
        is_concerned =  [m for m in movie["axes"] if m in display_axes]
        if is_concerned:
            movie_data = display_data.get(movie["id"], {})
            movie_data_status = movie_data.get("status","X")
            movie_data_disabled = (movie_data_status == "Y") and " " and not is_locked or "disabled"
            start_date_min = movie.get("start_date_min", start_date_str)
            for status in ("Y","N","X"):
                movie_data["is_%s" % status] = (status == movie_data_status) and "checked" or ""

            html += """
          <div class="movie-cell %(class_css)s" rel="%(id)s">
            <div class="title"><span rel="div.overlay" data-url="%(url)s" title="%(title)s%(subtitle)s">%(title_cropped)s%(subtitle)s</span>%(information)s</div>
            <div class="actions">
              <label class="YesCheckbox" title="YES"><input %(input_disabled)s type="radio" id="RadioFieldID1" name="choice-%(id)s-%(display_id)s" value="Y" %(is_y)s /><span></span></label>
              <label class="NoCheckbox" title="NO"><input %(input_disabled)s type="radio" id="RadioFieldID2" name="choice-%(id)s-%(display_id)s" value="N" %(is_n)s /><span></span></label>
              <label class="RienCheckbox" title="RESET"><input %(input_disabled)s type="radio" id="RadioFieldID3" name="choice-%(id)s-%(display_id)s" value="X" %(is_x)s /><span></span></label>
            </div>
            <div class="dates">
              <div><span>FROM</span><span><input %(disabled)s type="date" min="%(start)s" max="%(end)s" name="start-%(id)s" value="%(date1)s"></span></div>
              <div><span>TO</span><span><input %(disabled)s type="date" min="%(start)s" max="%(end)s" name="end-%(id)s" value="%(date2)s"></span></div>
            </div>
          </div>
    """ % {
        'title': movie['title'],
        'title_cropped': cropText(movie['title'],40),
        'id': movie['id'],
        'display_id': display.id,
        'start': start_date_min,
        'url': movie['preview'],
        'end': end_date_str,
        'is_y': movie_data.get("is_Y"),
        'is_n': movie_data.get("is_N"),
        'is_x': movie_data.get("is_X"),
        'date1': movie_data.get("start_date", ""),
        'date2': movie_data.get("end_date", ""),
        'class_css': movie_css_dict.get(movie_data_status, ""),
        'disabled': movie_data_disabled,
        'subtitle': movie["subtitle"],
        'input_disabled': input_disabled,
        'information': html_information(movie["information"],  "%s-%s" % (movie['id'],display.id))
    }

    html += """
    </div>"""

html += """
  </div></div>"""

return html
]]></Formula>
          <FieldReadTemplate type="Products.Archetypes.Field.StringField"/>
          <FieldEditTemplate type="Products.Archetypes.Field.StringField"/>
          <Mandatory type="Products.Archetypes.Field.BooleanField">False</Mandatory>
          <ValidationFormula type="Products.Archetypes.Field.TextField"><![CDATA[]]></ValidationFormula>
          <ToBeIndexed type="Products.Archetypes.Field.BooleanField">False</ToBeIndexed>
          <IndexType type="Products.Archetypes.Field.StringField">DEFAULT</IndexType>
          <HTMLAttributesFormula type="Products.Archetypes.Field.TextField"><![CDATA[]]></HTMLAttributesFormula>
        </element>
        <element id="program_id" title="program_id" type="PlominoField">
          <id type="Products.Archetypes.Field.StringField">program_id</id>
          <FieldType type="Products.Archetypes.Field.StringField">TEXT</FieldType>
          <FieldMode type="Products.Archetypes.Field.StringField">EDITABLE</FieldMode>
          <Formula type="Products.Archetypes.Field.TextField"><![CDATA[]]></Formula>
          <FieldReadTemplate type="Products.Archetypes.Field.StringField"/>
          <FieldEditTemplate type="Products.Archetypes.Field.StringField"/>
          <Mandatory type="Products.Archetypes.Field.BooleanField">False</Mandatory>
          <ValidationFormula type="Products.Archetypes.Field.TextField"><![CDATA[]]></ValidationFormula>
          <ToBeIndexed type="Products.Archetypes.Field.BooleanField">True</ToBeIndexed>
          <IndexType type="Products.Archetypes.Field.StringField">DEFAULT</IndexType>
          <HTMLAttributesFormula type="Products.Archetypes.Field.TextField"><![CDATA[]]></HTMLAttributesFormula>
        </element>
        <element id="shop_id" title="shop_id" type="PlominoField">
          <id type="Products.Archetypes.Field.StringField">shop_id</id>
          <FieldType type="Products.Archetypes.Field.StringField">TEXT</FieldType>
          <FieldMode type="Products.Archetypes.Field.StringField">EDITABLE</FieldMode>
          <Formula type="Products.Archetypes.Field.TextField"><![CDATA[]]></Formula>
          <FieldReadTemplate type="Products.Archetypes.Field.StringField"/>
          <FieldEditTemplate type="Products.Archetypes.Field.StringField"/>
          <Mandatory type="Products.Archetypes.Field.BooleanField">False</Mandatory>
          <ValidationFormula type="Products.Archetypes.Field.TextField"><![CDATA[]]></ValidationFormula>
          <ToBeIndexed type="Products.Archetypes.Field.BooleanField">True</ToBeIndexed>
          <IndexType type="Products.Archetypes.Field.StringField">DEFAULT</IndexType>
          <HTMLAttributesFormula type="Products.Archetypes.Field.TextField"><![CDATA[]]></HTMLAttributesFormula>
        </element>
        <element id="doctype" title="doctype" type="PlominoField">
          <id type="Products.Archetypes.Field.StringField">doctype</id>
          <FieldType type="Products.Archetypes.Field.StringField">TEXT</FieldType>
          <FieldMode type="Products.Archetypes.Field.StringField">CREATION</FieldMode>
          <Formula type="Products.Archetypes.Field.TextField"><![CDATA["shopprogram"]]></Formula>
          <FieldReadTemplate type="Products.Archetypes.Field.StringField"/>
          <FieldEditTemplate type="Products.Archetypes.Field.StringField"/>
          <Mandatory type="Products.Archetypes.Field.BooleanField">False</Mandatory>
          <ValidationFormula type="Products.Archetypes.Field.TextField"><![CDATA[]]></ValidationFormula>
          <ToBeIndexed type="Products.Archetypes.Field.BooleanField">True</ToBeIndexed>
          <IndexType type="Products.Archetypes.Field.StringField">DEFAULT</IndexType>
          <HTMLAttributesFormula type="Products.Archetypes.Field.TextField"><![CDATA[]]></HTMLAttributesFormula>
        </element>
        <element id="save" title="Save" type="PlominoAction">
          <id type="Products.Archetypes.Field.StringField">save</id>
          <ActionType type="Products.Archetypes.Field.StringField">SAVE</ActionType>
          <ActionDisplay type="Products.Archetypes.Field.StringField">BUTTON</ActionDisplay>
          <Content type="Products.Archetypes.Field.TextField"><![CDATA[]]></Content>
          <Hidewhen type="Products.Archetypes.Field.TextField"><![CDATA[return not plominoDocument.isNewDocument() and not plominoDocument.isEditMode()]]></Hidewhen>
          <InActionBar type="Products.Archetypes.Field.BooleanField">False</InActionBar>
        </element>
        <element id="planning_data" title="planning_data" type="PlominoField">
          <id type="Products.Archetypes.Field.StringField">planning_data</id>
          <FieldType type="Products.Archetypes.Field.StringField">TEXT</FieldType>
          <FieldMode type="Products.Archetypes.Field.StringField">EDITABLE</FieldMode>
          <Formula type="Products.Archetypes.Field.TextField"><![CDATA[]]></Formula>
          <FieldReadTemplate type="Products.Archetypes.Field.StringField"/>
          <FieldEditTemplate type="Products.Archetypes.Field.StringField"/>
          <Mandatory type="Products.Archetypes.Field.BooleanField">False</Mandatory>
          <ValidationFormula type="Products.Archetypes.Field.TextField"><![CDATA[]]></ValidationFormula>
          <ToBeIndexed type="Products.Archetypes.Field.BooleanField">False</ToBeIndexed>
          <IndexType type="Products.Archetypes.Field.StringField">DEFAULT</IndexType>
          <HTMLAttributesFormula type="Products.Archetypes.Field.TextField"><![CDATA[]]></HTMLAttributesFormula>
          <params>
<param>
<value><struct>
<member>
<name>widget</name>
<value><string>HIDDEN</string></value>
</member>
</struct></value>
</param>
</params>
        </element>
        <element id="planning_locked" title="planning_locked" type="PlominoField">
          <id type="Products.Archetypes.Field.StringField">planning_locked</id>
          <FieldType type="Products.Archetypes.Field.StringField">TEXT</FieldType>
          <FieldMode type="Products.Archetypes.Field.StringField">EDITABLE</FieldMode>
          <Formula type="Products.Archetypes.Field.TextField"><![CDATA[]]></Formula>
          <FieldReadTemplate type="Products.Archetypes.Field.StringField"/>
          <FieldEditTemplate type="Products.Archetypes.Field.StringField"/>
          <Mandatory type="Products.Archetypes.Field.BooleanField">False</Mandatory>
          <ValidationFormula type="Products.Archetypes.Field.TextField"><![CDATA[]]></ValidationFormula>
          <ToBeIndexed type="Products.Archetypes.Field.BooleanField">False</ToBeIndexed>
          <IndexType type="Products.Archetypes.Field.StringField">DEFAULT</IndexType>
          <HTMLAttributesFormula type="Products.Archetypes.Field.TextField"><![CDATA[]]></HTMLAttributesFormula>
          <params>
<param>
<value><struct>
<member>
<name>widget</name>
<value><string>HIDDEN</string></value>
</member>
</struct></value>
</param>
</params>
        </element>
        <element id="isRead" title="isRead" type="PlominoHidewhen">
          <id type="Products.Archetypes.Field.StringField">isRead</id>
          <Formula type="Products.Archetypes.Field.TextField"><![CDATA[return not plominoDocument.isNewDocument() and not plominoDocument.isEditMode()]]></Formula>
          <isDynamicHidewhen type="Products.Archetypes.Field.BooleanField">False</isDynamicHidewhen>
        </element>
        <element id="popup_html" title="popup_html" type="PlominoField">
          <id type="Products.Archetypes.Field.StringField">popup_html</id>
          <FieldType type="Products.Archetypes.Field.StringField">RICHTEXT</FieldType>
          <FieldMode type="Products.Archetypes.Field.StringField">DISPLAY</FieldMode>
          <Formula type="Products.Archetypes.Field.TextField"><![CDATA[return """<div class="overlay overlay-contact">
      <div class="close">
           <span><a href="#">Close this box.</a></span>
      </div>
      <a id="player">   </a></div><script>
    chanel.planning.manage_show_submit();
</script>"""]]></Formula>
          <FieldReadTemplate type="Products.Archetypes.Field.StringField"/>
          <FieldEditTemplate type="Products.Archetypes.Field.StringField"/>
          <Mandatory type="Products.Archetypes.Field.BooleanField">False</Mandatory>
          <ValidationFormula type="Products.Archetypes.Field.TextField"><![CDATA[]]></ValidationFormula>
          <ToBeIndexed type="Products.Archetypes.Field.BooleanField">False</ToBeIndexed>
          <IndexType type="Products.Archetypes.Field.StringField">DEFAULT</IndexType>
          <HTMLAttributesFormula type="Products.Archetypes.Field.TextField"><![CDATA[]]></HTMLAttributesFormula>
        </element>
        <element id="buttons" title="buttons" type="PlominoField">
          <id type="Products.Archetypes.Field.StringField">buttons</id>
          <FieldType type="Products.Archetypes.Field.StringField">RICHTEXT</FieldType>
          <FieldMode type="Products.Archetypes.Field.StringField">DISPLAY</FieldMode>
          <Formula type="Products.Archetypes.Field.TextField"><![CDATA[db = context.getParentDatabase()
agent = db.getAgent("shareShopProgramAndRedirect")

shop = db.getDocument(context.getItem("shop_id"))

current_user = context.getCurrentUser()

is_plone_manager = "[manager]" in context.getCurrentUserRoles()
is_zope_manager = "Manager" in current_user.getRoles()
is_owner = current_user.id in asList(shop.getItem("shop_manager"))
#Log("is pm:%s , is zm:%s , is o:%s" % (is_plone_manager,is_zope_manager,is_owner))

is_locked = str(plominoContext.getItem("planning_locked")) == "true"
is_new = plominoContext.isNewDocument()
is_edit = plominoContext.isEditMode()
#Log("is l:%s, is n:%s,is edit:%s"% (is_locked, is_new, is_edit))

allowed_to_submit = ((is_plone_manager or is_zope_manager or (is_owner and not(is_locked))))
allowed_to_share = (is_plone_manager or is_zope_manager or is_owner)
allowed_to_unpublish = (is_plone_manager or is_zope_manager)

submit_attribute = "disabled" if not(is_edit and allowed_to_submit) else ""
share_attribute = "disabled" if (is_new or not(allowed_to_share)) else ""
unpublish_attribute = "disabled" if not(is_edit and allowed_to_unpublish) else ""
unpublish_display = "hidden" if (not is_locked) else ""
submit_display = "hidden" if (is_locked) else ""

class_css = (is_plone_manager or is_zope_manager) and "manager" or ""

isnew_css = "hidden" if (plominoContext.isNewDocument()) else ""

display_css = "hidden" if (plominoContext.isDocument() and plominoContext.getItem("planning_locked") == "true") else ""

url = "%s/runAgent?shopprogram_id=%s" % (agent.absolute_url(), context.id) if context.isDocument() else ""

if context.isDocument() or context.REQUEST.get("program_id"):
    html = """
    <div class="sp_actions %(class_css)s">
         <div class="actions_row">
             <div class="save %(submit_attribute)s"">
                  <input type="submit" value="Save" name="save" class="btn" %(submit_attribute)s>
             </div>
             <div class="sp_override popupcontent %(share_attribute)s">
                       <a style="cursor: pointer;" rel="#pb_2" class="btn btn-default context link-overlay" href="%(url)s" %(share_attribute)s>
                         add to other pos
                       </a>
             </div>
             <div class="sp_workflow">
                   <button class="btn" rel="lock" display="%(submit_display)s" %(submit_attribute)s>Submit</button>
                   <button class="btn" rel="unlock" display="%(unpublish_display)s" %(unpublish_attribute)s>Submitted</button>
             </div>
             <div class="sp_reset %(submit_attribute)s">
                   <button class="btn" %(submit_attribute)s">reset</button>
             </div>
             <div class="special_request popupcontent">
                       <a style="cursor: pointer;" rel="#pb_2" class="btn btn-default context link-overlay" href="sendto_specialrequest_form">
                         Special Request
                       </a>
             </div>

         </div>
    </div>
    """ % { 
            "submit_attribute": submit_attribute,
            "share_attribute": share_attribute,
            "unpublish_attribute": unpublish_attribute,
            "submit_display": submit_display, 
            "unpublish_display": unpublish_display, 
            "class_css" : class_css, 
            "display_css" : display_css, 
            "isnew_css" : isnew_css, 
            "url" : url}

    return html]]></Formula>
          <FieldReadTemplate type="Products.Archetypes.Field.StringField"/>
          <FieldEditTemplate type="Products.Archetypes.Field.StringField"/>
          <Mandatory type="Products.Archetypes.Field.BooleanField">False</Mandatory>
          <ValidationFormula type="Products.Archetypes.Field.TextField"><![CDATA[]]></ValidationFormula>
          <ToBeIndexed type="Products.Archetypes.Field.BooleanField">False</ToBeIndexed>
          <IndexType type="Products.Archetypes.Field.StringField">DEFAULT</IndexType>
          <HTMLAttributesFormula type="Products.Archetypes.Field.TextField"><![CDATA[]]></HTMLAttributesFormula>
        </element>
        <element id="override_duplicate_action" title="Override/Duplicate data on all manager's shops from same market" type="PlominoAction">
          <id type="Products.Archetypes.Field.StringField">override_duplicate_action</id>
          <ActionType type="Products.Archetypes.Field.StringField">PYTHON</ActionType>
          <ActionDisplay type="Products.Archetypes.Field.StringField">BUTTON</ActionDisplay>
          <Content type="Products.Archetypes.Field.TextField"><![CDATA[db = plominoContext.getParentDatabase()

doc = actual_context(context)
form = db.getForm("frmShopProgram")
def getData(sp):
        planning_data = sp.getItem("planning_data")
        return (planning_data) and json_loads(planning_data) or {}

program_id = doc.getItem("program_id")
shop_id = doc.getItem("shop_id")
context.REQUEST.set("program_id", program_id)
program = db.getDocument(program_id)
shop = db.getDocument(shop_id)
market = shop.getItem("shop_market")
manager = shop.getItem("shop_manager")

shop_programs_brains = db.getIndex().dbsearch({'doctype': 'shopprogram', 'program_id': program_id})
shop_programs = [a.getObject() for a in shop_programs_brains if a.id != shop_id]
sp_by_shop={}


for sp in shop_programs:
    sp_by_shop[sp.getItem("shop_id")] = sp

shops = [ a.getObject() for a in db.getIndex().dbsearch({'doctype': 'shop', 
                        'shop_manager': manager, 'shop_is_published': True
                        }) if a.id != shop_id]

current_planning_data = getData(doc)

for shop in shops:
    shop_id_tmp = shop.id
    if shop_id_tmp in sp_by_shop.keys():
        sp = sp_by_shop[shop_id_tmp]
        if sp.getItem("planning_locked","false") == "false":
            tmp_planning_data = getData(sp)
            for k,v in current_planning_data.items():
                movie_data = tmp_planning_data.get(k, {})
                tmp_planning_data[k] = dict(movie_data.items() + v.items())
    
            sp.setItem("planning_data", unicode(json_dumps(tmp_planning_data)))
            db.writeMessageOnPage("Planning for %s [%s] updated" % (shop.getItem("shop_name"), program.getItem("program_name")), context.REQUEST)
        else:
            db.writeMessageOnPage("Planning for %s [%s] not updated because already locked" % (shop.getItem("shop_name"), program.getItem("program_name")), context.REQUEST)            
    else:
        sp = db.createDocument()
        sp.setItem("program_id", program_id)
        context.REQUEST.set("shop_id", shop_id_tmp)
        sp.setItem("shop_id", shop_id_tmp)
        sp.setItem("planning_data", unicode(json_dumps(current_planning_data)))
        sp.save(form=form, creation=True)
        db.writeMessageOnPage("Planning for %s [%s] created" % (shop.getItem("shop_name"), program.getItem("program_name")), context.REQUEST)]]></Content>
          <Hidewhen type="Products.Archetypes.Field.TextField"><![CDATA[doc = actual_context(context)
return not(doc and (context.getCurrentUserId() in doc.getItem("Plomino_Authors") or "[manager]" in context.getCurrentUserRoles() or "Manager" in context.getCurrentUser().getRoles()))]]></Hidewhen>
          <InActionBar type="Products.Archetypes.Field.BooleanField">False</InActionBar>
        </element>
        <element id="shopprogram_comments" title="shopprogram_comments" type="PlominoField">
          <id type="Products.Archetypes.Field.StringField">shopprogram_comments</id>
          <FieldType type="Products.Archetypes.Field.StringField">TEXT</FieldType>
          <FieldMode type="Products.Archetypes.Field.StringField">EDITABLE</FieldMode>
          <Formula type="Products.Archetypes.Field.TextField"><![CDATA[]]></Formula>
          <FieldReadTemplate type="Products.Archetypes.Field.StringField"/>
          <FieldEditTemplate type="Products.Archetypes.Field.StringField"/>
          <Mandatory type="Products.Archetypes.Field.BooleanField">False</Mandatory>
          <ValidationFormula type="Products.Archetypes.Field.TextField"><![CDATA[]]></ValidationFormula>
          <ToBeIndexed type="Products.Archetypes.Field.BooleanField">False</ToBeIndexed>
          <IndexType type="Products.Archetypes.Field.StringField">DEFAULT</IndexType>
          <HTMLAttributesFormula type="Products.Archetypes.Field.TextField"><![CDATA[]]></HTMLAttributesFormula>
        </element>
      </elements>
    </element>
  </design>
</plominodatabase>
